{"remainingRequest":"/home/mateus/dev/CountDownSiteVue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/home/mateus/dev/CountDownSiteVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/mateus/dev/CountDownSiteVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mateus/dev/CountDownSiteVue/src/components/Countdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mateus/dev/CountDownSiteVue/src/components/Countdown.vue","mtime":1625623301552},{"path":"/home/mateus/dev/CountDownSiteVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mateus/dev/CountDownSiteVue/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/mateus/dev/CountDownSiteVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mateus/dev/CountDownSiteVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.math.trunc\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  mounted: function mounted() {\n    var _this = this;\n\n    window.setInterval(function () {\n      _this.now = Math.trunc(new Date().getTime() / 1000);\n    }, 1);\n  },\n  props: {\n    date: {\n      type: Number,\n      coerce: function coerce(str) {\n        return Math.trunc(Date.parse(str) / 1000);\n      }\n    }\n  },\n  data: function data() {\n    console.log(Math.trunc(new Date().getTime() / 1000));\n    return {\n      now: Math.trunc(new Date().getTime() / 1000)\n    };\n  },\n  computed: {\n    seconds: function seconds() {\n      return (this.date - this.now) % 60;\n    },\n    minutes: function minutes() {\n      return Math.trunc((this.date - this.now) / 60) % 60;\n    },\n    hours: function hours() {\n      return Math.trunc((this.date - this.now) / 60 / 60) % 24;\n    },\n    days: function days() {\n      return Math.trunc((this.date - this.now) / 60 / 60 / 24);\n    }\n  }\n};",{"version":3,"sources":["Countdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAsBA,eAAA;AACA,EAAA,OADA,qBACA;AAAA;;AACA,IAAA,MAAA,CAAA,WAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,GAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,IAAA,EAAA,CAAA,OAAA,KAAA,IAAA,CAAA;AACA,KAFA,EAEA,CAFA;AAIA,GANA;AAQA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,MAAA,EAAA,gBAAA,GAAA;AAAA,eAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,IAAA,IAAA,CAAA;AAAA;AAFA;AADA,GARA;AAeA,EAAA,IAfA,kBAeA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,IAAA,EAAA,CAAA,OAAA,KAAA,IAAA,CAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,IAAA,CAAA,KAAA,CAAA,IAAA,IAAA,EAAA,CAAA,OAAA,KAAA,IAAA;AADA,KAAA;AAGA,GApBA;AAsBA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,CAAA,KAAA,IAAA,GAAA,KAAA,GAAA,IAAA,EAAA;AACA,KAHA;AAKA,IAAA,OALA,qBAKA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,CAAA,KAAA,IAAA,GAAA,KAAA,GAAA,IAAA,EAAA,IAAA,EAAA;AACA,KAPA;AASA,IAAA,KATA,mBASA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,CAAA,KAAA,IAAA,GAAA,KAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AACA,KAXA;AAaA,IAAA,IAbA,kBAaA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,CAAA,KAAA,IAAA,GAAA,KAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA;AACA;AAfA;AAtBA,CAAA","sourcesContent":["<template>\n <div class=\"outside-block\">\n    <div class=\"block\">\n        <p class=\"digit\">{{ days | two_digits }}</p>\n        <p class=\"text\">Dias</p>\n    </div>\n    <div class=\"block\">\n        <p class=\"digit\">{{ hours | two_digits }}</p>\n        <p class=\"text\">Horas</p>\n    </div>\n    <div class=\"block\">\n        <p class=\"digit\">{{ minutes | two_digits }}</p>\n        <p class=\"text\">Minutos</p>\n    </div>\n    <div class=\"block\">\n        <p class=\"digit\">{{ seconds | two_digits }}</p>\n        <p class=\"text\">Segundos</p>\n    </div>\n    \n </div>\n</template>\n<script>\nexport default {\n    mounted() {\n        window.setInterval(() => {\n            this.now = Math.trunc((new Date()).getTime() / 1000);\n        },1);\n\n    },\n\n    props : {\n        date : {\n            type: Number,\n            coerce: str => Math.trunc(Date.parse(str) / 1000)\n        }\n    },\n\n    data() {\n        console.log(Math.trunc((new Date()).getTime() / 1000));\n        return {\n            now: Math.trunc((new Date()).getTime() / 1000)\n        }\n    },\n\n    computed: {\n        seconds() {\n            return (this.date - this.now) % 60;\n        },\n\n        minutes() {\n            return Math.trunc((this.date - this.now) / 60) % 60;\n        },\n\n        hours() {\n            return Math.trunc((this.date - this.now) / 60 / 60) % 24;\n        },\n\n        days() {\n            return Math.trunc((this.date - this.now) / 60 / 60 / 24);\n        }\n    }\n}\n\n</script>\n<style>\n@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:400|Roboto:100);\n\n.outside-block {\n    display: inline-flex;\n}\n\n.block {\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n\n.text {\n    color: bisque;\n    font-size: 40px;\n    font-family: 'Roboto Condensed', serif;\n    font-weight: 400;\n    margin-top:10px;\n    margin-bottom: 10px;\n    text-align: center;\n}\n\n.digit {\n    color: #ecf0f1;\n    font-size: 150px;\n    font-weight: 100;\n    font-family: 'Roboto', serif;\n    margin: 10px;\n    text-align: center;\n}\n</style>\n"],"sourceRoot":"src/components"}]}