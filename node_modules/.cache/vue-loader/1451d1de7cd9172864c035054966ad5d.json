{"remainingRequest":"/home/mateus/dev/CountDownSite/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mateus/dev/CountDownSite/src/components/Countdown.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/mateus/dev/CountDownSite/src/components/Countdown.vue","mtime":1625621487780},{"path":"/home/mateus/dev/CountDownSite/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/mateus/dev/CountDownSite/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mateus/dev/CountDownSite/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mateus/dev/CountDownSite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mateus/dev/CountDownSite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:400|Roboto:100);\n\n.block {\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n\n.text {\n    color: #1abc9c;\n    font-size: 40px;\n    font-family: 'Roboto Condensed', serif;\n    font-weight: 400;\n    margin-top:10px;\n    margin-bottom: 10px;\n    text-align: center;\n}\n\n.digit {\n    color: #ecf0f1;\n    font-size: 150px;\n    font-weight: 100;\n    font-family: 'Roboto', serif;\n    margin: 10px;\n    text-align: center;\n}\n",{"version":3,"sources":["Countdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Countdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\n <div>\n    <div class=\"block\">\n        <p class=\"digit\">{{ days | two_digits }}</p>\n        <p class=\"text\">Days</p>\n    </div>\n    <div class=\"block\">\n        <p class=\"digit\">{{ hours | two_digits }}</p>\n        <p class=\"text\">Hours</p>\n    </div>\n    <div class=\"block\">\n        <p class=\"digit\">{{ minutes | two_digits }}</p>\n        <p class=\"text\">Minutes</p>\n    </div>\n    <div class=\"block\">\n        <p class=\"digit\">{{ seconds | two_digits }}</p>\n        <p class=\"text\">Seconds</p>\n    </div>\n </div>\n</template>\n<script>\nexport default {\n\n    ready() {\n        window.setInterval(() => {\n            this.now = Math.trunc((new Date()).getTime() / 1000);\n        },1000);\n    },\n\n    props : {\n        date : {\n            type: Number,\n            coerce: str => Math.trunc(Date.parse(str) / 1000)\n        }\n    },\n\n    data() {\n        return {\n            now: Math.trunc((new Date()).getTime() / 1000)\n        }\n    },\n\n    computed: {\n        seconds() {\n            return (this.date - this.now) % 60;\n        },\n\n        minutes() {\n            return Math.trunc((this.date - this.now) / 60) % 60;\n        },\n\n        hours() {\n            return Math.trunc((this.date - this.now) / 60 / 60) % 24;\n        },\n\n        days() {\n            return Math.trunc((this.date - this.now) / 60 / 60 / 24);\n        }\n    }\n}\n\n</script>\n<style>\n@import url(https://fonts.googleapis.com/css?family=Roboto+Condensed:400|Roboto:100);\n\n.block {\n    display: flex;\n    flex-direction: column;\n    margin: 20px;\n}\n\n.text {\n    color: #1abc9c;\n    font-size: 40px;\n    font-family: 'Roboto Condensed', serif;\n    font-weight: 400;\n    margin-top:10px;\n    margin-bottom: 10px;\n    text-align: center;\n}\n\n.digit {\n    color: #ecf0f1;\n    font-size: 150px;\n    font-weight: 100;\n    font-family: 'Roboto', serif;\n    margin: 10px;\n    text-align: center;\n}\n</style>\n"]}]}